
# generic aliases

alias path="echo "$PATH" | tr ':' '\n'"

# navigation
alias ll='eza --group-directories-first --show-symlinks --header -al -s name'
alias ..='cd ..'
alias xx="exit"
alias c='clear'

# utilities
alias bat="bat -p --theme OneHalfDark"
alias cnt="ls | wc -l"
alias btm="btm -C ~/.config/btm.toml --autohide_time"
alias hf="hyperfine --warmup 3 --shell bash"

make() {
    if [ -f "_Makefile" ]; then
        echo "Trying _Makefile"
        if ! command make -f _Makefile "$@" 2> >(tee /tmp/make_err.$$ >&2); then
            if grep -q "No rule to make target" /tmp/make_err.$$; then
                echo "Falling back to default Makefile"
                command make "$@"
            else
                return 1
            fi
        fi
        rm -f /tmp/make_err.$$
    else
        command make "$@"
    fi
}

# git
alias gs='git status'
alias gb='git branch'
alias ga='git add .'
alias gl='git log --oneline --graph --decorate'
alias gco='git checkout'
grb() {
    git rebase --autostash -i HEAD~"$1"
}

# docker
dc() {
    local args=("$@")
    local fmt tpl
    if [ "${args[1]}" = "ps" ]; then
        fmt="--format"
        tpl="table {{.ID}}\t{{.Image}}\t{{.Status}}\t{{.Name}}"
    fi
    if [ -f "_docker-compose.yml" ]; then
        echo "Using _docker-compose.yml"
        docker compose -f _docker-compose.yml "${args[@]}" ${fmt:+$fmt} ${tpl:+$tpl}
    else
        docker compose "${args[@]}" ${fmt:+$fmt} ${tpl:+$tpl}
    fi
}
dcr() {
    if [[ $# -eq 0 ]]; then
        docker compose stop && docker compose up -d && docker compose logs -f
    else
        docker compose stop "$@" && docker compose up -d "$@" && docker compose logs -f "$@"
    fi
}
dcrb() {
    if [[ $# -eq 0 ]]; then
        docker compose stop && docker compose rm -vf && docker compose up -d && docker compose logs -f
    else
        docker compose stop "$@" && docker compose rm -vf "$@" && docker compose up -d "$@" && docker compose logs -f "$@"
    fi
}
dnet() {
    local container_name="$(docker ps -a --format '{{.Names}}' | grep "$1")"
    docker run --rm -it --net container:$container_name nicolaka/netshoot iftop -bP
}

# k8
k() {
    if [ -f "./.kubeconfig" ]; then
        KUBECONFIG="./.kubeconfig" kubectl "$@"
    else
        kubectl "$@"
    fi
}
k9s() {
    if [ -f "./.kubeconfig" ]; then
        KUBECONFIG="./.kubeconfig" command k9s "$@"
    else
        command k9s "$@"
    fi
}

# golang
goenv() {
    source goenv-scp "$1" "$2"
}
goinstall() {
    GOPROXY=direct go install "$@"
}
alias goclean='go clean -cache -modcache -i -r'
alias gotest='go test -race ./...'
alias gobench='go test -bench=.'

# external scripts
alias gogh='bash -c  "$(curl -sLo- https://git.io/vQgMr)"'

# extra
alias gogek='docker run --rm -it -p 8888:8080 ghcr.io/hasansino/gogek:latest'

# genai
alias clauded='claude --dangerously-skip-permissions'
